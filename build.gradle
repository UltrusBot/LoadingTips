plugins {
    alias libs.plugins.fabric.loom
    alias libs.plugins.loom.quiltflower
    alias libs.plugins.publishing
    id 'maven-publish'
}
version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}
repositories {
    maven {
        name = "Quilt"
        url = uri("https://maven.quiltmc.org/repository/release")
    }
    maven {
        name = "Quilt Snapshots"
        url = uri("https://maven.quiltmc.org/repository/snapshot")
    }
    maven {
        url "https://api.modrinth.com/maven"
    }
    maven {
        url "https://maven.terraformersmc.com"
    }
}

dependencies {
    minecraft(libs.minecraft)
    mappings(variantOf(libs.quilt.mappings) { classifier("intermediary-v2") })
    modImplementation(libs.fabric.loader)
    modImplementation(libs.fabric.api)
    modImplementation(libs.midnightlib)
    include(libs.midnightlib)
    modImplementation(libs.modmenu)
}
publishMods {
    displayName = "Loading Screen Tips v$project.version"
    file = remapJar.archiveFile
    changelog = file("$rootDir/CHANGELOG.md").text
    version = project.version
    type = STABLE
    modLoaders.addAll("fabric", "quilt")
    curseforge {
        projectId = "527804"
        minecraftVersions.addAll("1.20.3", "1.20.4")
        accessToken = providers.environmentVariable("CF_API_KEY")
        embeds {
            slug = "midnightlib"
        }
    }
    modrinth {
        projectId = "9iE55lp5"
        minecraftVersions.addAll("1.20.3", "1.20.4")
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        embeds {
            slug = "midnightlib"
        }
    }
    github {
        repository = "UltrusBot/LoadingScreenTips"
        commitish = "1.20"
        accessToken = providers.environmentVariable("GH_TOKEN")
    }

    dryRun = false
}
processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

jar {
    from("LICENSE") {
        rename { "LICENSE_${archives_base_name}" }
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}



java {
    withSourcesJar()
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
